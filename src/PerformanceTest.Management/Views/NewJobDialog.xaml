<Window x:Class="PerformanceTest.Management.NewJobDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:PerformanceTest.Management"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="New Experiment..." Height="750" Width="550" Loaded="Window_Loaded" WindowStartupLocation="CenterOwner" ShowInTaskbar="False" ResizeMode="NoResize">

    <Window.Resources>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <local:NotNullToBooleanConverter x:Key="NotNullToBoolean" />
        <local:NotNullToVisibilityConverter x:Key="NotNullToVisibility" />
        <local:NullToVisibilityConverter x:Key="NullToVisibility" />
        <local:BoolToVisibilityConverter x:Key="BoolToVisibility" />
        <local:AreEqualToFontWeightConverter x:Key="AreEqual" />

        <GridLength x:Key="KeyWidth">200</GridLength>
        <Thickness x:Key="ParameterMargin" Left="5" Top="5" Right="10" Bottom="10" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical">
            <!-- Container URI -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Content="Benchmark container:" Height="28" HorizontalAlignment="Left" Name="label3" VerticalAlignment="Center" Grid.Row="0" />
                <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="1">
                    <RadioButton GroupName="groupContainer" IsChecked="True">Default</RadioButton>
                    <RadioButton GroupName="groupContainer" HorizontalContentAlignment="Stretch">
                        <Grid Margin="0,0,0,0" IsEnabled="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="0,0,10,0" Grid.Column="0">Connection string:</TextBlock>
                            <TextBox Height="24" Grid.Column="1" />
                        </Grid>
                    </RadioButton>
                </StackPanel>
            </Grid>
            <!-- Directory -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Directory:" Height="28" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="0" />
                <TextBox Height="24" HorizontalAlignment="Stretch" Name="txtSharedDir" VerticalAlignment="Center" Grid.Row="0"  Grid.Column="1" 
                             ToolTip="{Binding BenchmarkLibaryDescription}"
                             Text="{Binding BenchmarkDirectory, Mode=TwoWay}" />
                <Button Width="23" Height="23" HorizontalAlignment="Stretch" Name="btnSelectSharedDir" VerticalAlignment="Stretch" Grid.Row="0" Grid.Column="2"  Margin="2" 
                            Command="{Binding ChooseDirectoryCommand}">
                    <Image Source="/PerformanceTest.Management;component/Images/taskbrowse.ico" />
                </Button>
            </Grid>
            <!-- Categories -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>


                <Label Content="Categories:" Height="28" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0"/>
                <TextBox Height="24" HorizontalAlignment="Stretch" Name="txtCategories" 
                             Text="{Binding Categories, Mode=TwoWay}"
                             VerticalAlignment="Center" Width="Auto" Grid.Column="1" ToolTip="The categories to draw the benchmarks from." />
                <Button Width="23" Height="23" HorizontalAlignment="Stretch" Name="btnSelectCategories" VerticalAlignment="Stretch" Grid.Column="2" Margin="2" 
                            Command="{Binding ChooseCategoriesCommand}">
                    <Image Source="/PerformanceTest.Management;component/Images/taskbrowse.ico" />
                </Button>
            </Grid>
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Content="Domain:" Height="28" HorizontalAlignment="Left" x:Name="labelDomain" VerticalAlignment="Center" Grid.Column="0" />
                <ComboBox Height="24" HorizontalAlignment="Stretch" x:Name="cbSelectDomain" VerticalAlignment="Center" Grid.Column="1"
                              ToolTip="Determines an additional analysis and process results interpretation." IsEnabled="True"
                              SelectedItem="{Binding Domain}" ItemsSource="{Binding Domains}"/>
            </Grid>
            <!-- Extension -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Content="Benchmark extension(s):" Height="28" HorizontalAlignment="Left" Name="label14" VerticalAlignment="Center" Grid.Column="0"/>
                <TextBox Height="24" HorizontalAlignment="Stretch" Name="txtExtension" VerticalAlignment="Center" Grid.Column="1" TabIndex="3" 
                         ToolTip="The extension of benchmark files, e.g., smt2 for SMT-Lib version 2 files.\nMultiple extensions can be provided through pipe, e.g. smt2 | smt." Margin="0,2"
                         Text="{Binding Extension}"/>
            </Grid>
            <!-- Executable -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Content="Executable:" Height="28" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0"/>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <RadioButton Name="chkMostRecentBinary" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" 
                                 Margin="0,0,0,7"
                                 IsChecked="{Binding UseMostRecentExecutable}"
                                 IsEnabled="{Binding CanUseMostRecent, Mode=OneWay}">
                        <TextBlock>Use most recent <Run Text="{Binding RecentBlobDisplayName, Mode=OneWay, StringFormat=({0})}"/></TextBlock>
                    </RadioButton>
                    <RadioButton Content="New" Name="chkNewBinary" Grid.Row="1" Grid.Column="0" Margin="0,0,0,2" 
                                IsChecked="{Binding UseNewExecutable}"  />
                    <Grid Grid.Column="0" Grid.Row="2"
                        Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibility}, ElementName=chkNewBinary}">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ListBox Height="75" HorizontalAlignment="Stretch" Name="txtExecutable" VerticalAlignment="Center" Grid.Column="0" ToolTip="The target executable." 
                                 IsEnabled="{Binding UseNewExecutable}" 
                                 ItemsSource="{Binding ExecutableFileNames, Mode=OneWay}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding .}" FontSize="11">
                                        <TextBlock.FontWeight>
                                            <MultiBinding ConverterParameter="Bold" Converter="{StaticResource AreEqual}">
                                                <Binding Path="." />
                                                <Binding Path="DataContext.MainExecutable" ElementName="txtExecutable" />
                                            </MultiBinding>
                                        </TextBlock.FontWeight>
                                    </TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Button Width="23" Height="23" HorizontalAlignment="Stretch" Name="btnSelectExecutable" VerticalAlignment="Top" Grid.Column="1" Margin="2"
                            Command="{Binding ChooseExecutableCommand}">
                            <Image Source="/PerformanceTest.Management;component/Images/taskbrowse.ico" />
                        </Button>
                    </Grid>
                </Grid>
            </Grid>
            <!-- Parameters -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Content="Parameters:" Height="28" HorizontalAlignment="Left" Name="labelParameters" VerticalAlignment="Center" Grid.Column="0" />
                <StackPanel Orientation="Vertical" VerticalAlignment="Center"  Grid.Column="1">
                    <TextBox Height="24" Margin="0,5,0,0" HorizontalAlignment="Stretch" Name="txtParameters" ToolTip="Parameters for the executable." 
                                 Text="{Binding Parameters}"/>
                    <TextBlock Margin="0,5,10,10">Use {0} as a placeholder for an input file name.</TextBlock>
                </StackPanel>
            </Grid>
            <!-- Domain -->
            <!-- DomainReplace (check-sat) -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Label Content="Replace (check-sat):" Height="28" HorizontalAlignment="Left" Name="labelReplaceCheckSat" VerticalAlignment="Center" Grid.Column="0" />
                <GroupBox Grid.RowSpan="2" Grid.Column="1">
                    <GroupBox.Header>
                        <CheckBox Name="chkReplaceCheckSat" Content="Enable"  IsChecked="False" />
                    </GroupBox.Header>
                    <TextBox Height="24" HorizontalAlignment="Stretch" Name="txtReplaceCheckSat" VerticalAlignment="Center" ToolTip="(check-sat) will be replace by this." IsEnabled="False" Width="250" />
                </GroupBox>
            </Grid>
            <!-- Memory limit -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Memory limit:" Height="28" HorizontalAlignment="Left" Name="labelMemout" VerticalAlignment="Center" Grid.Column="0"/>
                <TextBox Height="24" HorizontalAlignment="Stretch" Name="txtMemout" VerticalAlignment="Center" TabIndex="15" Grid.Row="9" Grid.Column="1" ToolTip="The memory limit (per benchmark)." Margin="0,2" 
                             Text="{Binding BenchmarkMemoryLimitMb}"/>
                <Label Content="MB" HorizontalAlignment="Left" Grid.Column="2"/>
            </Grid>
            <!-- Timeout -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Timeout:" Height="28" HorizontalAlignment="Left" Name="label12" VerticalAlignment="Center" Grid.Column="0"/>
                <TextBox Height="24" HorizontalAlignment="Stretch" Name="txtTimeout" VerticalAlignment="Center" TabIndex="15" Grid.Column="1" ToolTip="The time limit (per benchmark)." Margin="0,2"
                             Text="{Binding BenchmarkTimeoutSec}"/>
                <Label Content="sec" HorizontalAlignment="Left" Grid.Column="2"/>
            </Grid>
            <!-- Note -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Content="Note:" Height="28" HorizontalAlignment="Left" Name="labelNote" VerticalAlignment="Center" Grid.Column="0"/>
                <TextBox Height="23" HorizontalAlignment="Stretch" Name="txtNote" VerticalAlignment="Center" TabIndex="15" Grid.Column="1" ToolTip="A descriptive note, if you like."
                     MaxLines="1" MaxLength="256" Text="{Binding Note}"/>

            </Grid>
            <!-- Azure Batch Pool -->
            <Grid Margin="{StaticResource ParameterMargin}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{StaticResource KeyWidth}" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Azure Batch Pool:" Height="28" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0"/>
                <TextBox Height="24" HorizontalAlignment="Stretch"
                             Text="{Binding Pool, Mode=TwoWay}"
                             VerticalAlignment="Center" Width="Auto" Grid.Column="1" ToolTip="The categories to draw the benchmarks from." />
                <Button Width="23" Height="23" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2" Margin="2" 
                            Command="{Binding ChoosePoolCommand}">
                    <Image Source="/PerformanceTest.Management;component/Images/taskbrowse.ico" />
                </Button>
                <!--<ComboBox Height="23" HorizontalAlignment="Stretch" VerticalAlignment="Center" TabIndex="15" Grid.Column="1" 
                          Visibility="{Binding AvailablePools, Converter={StaticResource NotNullToVisibility}}"
                          SelectedItem="{Binding Pool}"
                          ItemsSource="{Binding AvailablePools}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding Id, Mode=OneWay}" Margin="0,0,0,5"/>
                                <TextBlock Text="{Binding VirtualMachineSize, Mode=OneWay, StringFormat=Virtual machine size: {0}}" FontWeight="Light" />
                                <TextBlock Text="{Binding AllocationState, Mode=OneWay, StringFormat=Allocation State: {0}}" FontWeight="Light" />
                                <TextBlock Text="{Binding PoolState, Mode=OneWay, StringFormat=State: {0}}" FontWeight="Light" />
                                <TextBlock Text="{Binding DedicatedNodes, Mode=OneWay, StringFormat=Current dedicated nodes: {0}}" FontWeight="Light" />
                                <TextBlock Text="{Binding RunningJobs, Mode=OneWay, StringFormat=Running jobs: {0}}" FontWeight="Light" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>-->
            </Grid>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,10">
            <Button Name="okButton" IsDefault="True" Width="80" Click="okButton_Click">OK</Button>
            <Button Name="cancelButton" IsCancel="True" Width="80" Click="cancelButton_Click" Margin="10,0,10,0">Cancel</Button>
        </StackPanel>
    </Grid>
</Window>
